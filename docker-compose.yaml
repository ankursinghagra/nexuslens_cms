version: "3.9"
networks:
  backend:
services:
  php:
    build: "./.docker/php/"
    image: php:8.2-apache
    container_name: php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./php_port/
        target: /var/www/html/
    networks:
      - backend
  mysql:
    build: "./.docker/mysql/"
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=php_docker
      - MYSQL_USER=php_docker
      - MYSQL_PASSWORD=password # this should live in a env var
      - MYSQL_TCP_PORT=3306
      - MYSQL_ALLOW_EMPTY_PASSWORD=1 # equivalent to True
    ports:
      - "3306:3306"
    depends_on:
      - php
    volumes:
      - "./.docker/mysql/persist:/var/lib/mysql" # this is how we persist a sql db even when container stops
    networks:
      - backend
  phpmyadmin:
    container_name: phpmyadmin-gui
    image: phpmyadmin
    ports:
      - "8080:80"
    restart: always
    environment:
      - PMA_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=
    depends_on:
      - mysql
    networks:
      - backend
  nodejs:
    container_name: nodejs
    build: "./.docker/nodejs"
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./node_port/
        target: /usr/src/app
    depends_on:
      - mysql
      - mongodb
    networks:
      - backend
  mongodb:
    container_name: mongodb
    build: "./.docker/mongodb"
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: test
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./.docker/mongodb/persist:/data/db
    networks:
      - backend
  mongo-express:
    container_name: mongo-express-gui
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - backend
